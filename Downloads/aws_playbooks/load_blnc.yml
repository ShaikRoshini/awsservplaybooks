
---
- name: A simple Load Balanced Web Server
  hosts: localhost
  connection: local
  gather_facts: False
  vars_files:
    - awscreds
  tasks:
    - name: spin up the instance
      ec2:
        aws_access_key: "{{aws_id}}"
        aws_secret_key: "{{aws_key}}"
        region: "{{aws_region}}"
        key_name: ubuntu_key
        group_id: "{{group}}"
        instance_type: t2.micro
        image: "{{ami}}"
        wait: yes
        instance_tags:
           group: webserver
        exact_count: 1
        count_tag:  webserver
      register: ec2_instances
      tags: ec2

    - debug: msg= "{{ ec2_instances }}"
      tags: ec2_instance

    - name: Wait for servers to come online
      wait_for:
        host: "{{ item.public_ip }}"
        port: 22
        timeout: 120
      with_items: "{{ ec2_instances.tagged_instances }}"

    - name: sleep for 20 sec
      pause:
        minutes: 1

    - name: Add ec2 instances as known hosts
      known_hosts:
        name: "{{ item.public_ip }}"
        key: "{{ lookup('pipe', 'ssh-keyscan -t rsa ' + item.public_ip) }}"
      with_items: "{{ ec2_instances.tagged_instances }}"

    - name: add server ip addresses to hosts group
      add_host:
        hostname: "{{ item.public_ip }}"
        ansible_ssh_user: ec2-user
        ansible_ssh_private_key_file: ubuntu_key
        groupname: launched
      with_items: "{{ ec2_instances.tagged_instances }}"



- name: configure the webservers
  hosts: launched
  remote_user: ec2-user
  become: True
  become_method: sudo
  tasks:
    - name: installing httpd package
      yum: name=httpd state=installed
    - name: copy index.html
      copy: src=index.html dest=/var/www/html/index.html
    - name: start apache2 service
      service: name=httpd state=started

- name: spin up the load balancer and add the servers to it
  hosts: 127.0.0.1
  connection: local
  become: False
  vars_files:
    - awscreds
  gather_facts: False
  tasks:
    - name: setup a simple load balancer
      ec2_elb_lb:
        aws_access_key: "{{aws_id}}"
        aws_secret_key: "{{aws_key}}"
        name: aws-elb
        state: present
        region: "{{aws_region}}"
        zones:
          - us-east-1a
        listeners:
          - protocol: http
            load_balancer_port: 80
            instance_port: 80
      register: aws-elb

- hosts: localhost
  connection: local
  become: False
  vars_files:
    - awscreds
  tasks:
    - name: Add each EC2 instance to the ELB
      ec2_elb:
        aws_access_key: "{{aws_id}}"
        aws_secret_key: "{{aws_key}}"
        state: present
        ec2_elbs: aws-elb
        region: us-east-1
        instance_id: "{{ item.id }}"
      with_items: "{{ ec2_instances.tagged_instances }}"
